// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShopifyHotelSourcing.Repositories;

namespace ShopifyHotelSourcing.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20211015183657_hotelModelConfigured")]
    partial class hotelModelConfigured
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ShopifyHotelSourcing.DBModels.Hotels.Hotel", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AccomodationTypeCode")
                        .HasColumnType("text");

                    b.Property<string>("CategoryCode")
                        .HasColumnType("text");

                    b.Property<string>("CategoryGroupCode")
                        .HasColumnType("text");

                    b.Property<string>("ChainCode")
                        .HasColumnType("text");

                    b.Property<string>("CountryCode")
                        .HasColumnType("text");

                    b.Property<string>("DestinationCode")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("License")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<int>("Ranking")
                        .HasColumnType("integer");

                    b.Property<string>("S2C")
                        .HasColumnType("text");

                    b.Property<List<int>>("SegmentCodes")
                        .HasColumnType("integer[]");

                    b.Property<string>("StateCode")
                        .HasColumnType("text");

                    b.Property<string>("WebURL")
                        .HasColumnType("text");

                    b.Property<int>("ZoneCode")
                        .HasColumnType("integer");

                    b.HasKey("Code");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("ShopifyHotelSourcing.DBModels.Locations.Country", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("isoCode")
                        .HasColumnType("text");

                    b.HasKey("code");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("ShopifyHotelSourcing.DBModels.Locations.Destination", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("countryCode")
                        .HasColumnType("text");

                    b.Property<string>("isoCode")
                        .HasColumnType("text");

                    b.HasKey("code");

                    b.HasIndex("countryCode");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("ShopifyHotelSourcing.DBModels.Hotels.Hotel", b =>
                {
                    b.OwnsOne("ShopifyHotelSourcing.DBModels.Types.Coordinate", "Coordinates", b1 =>
                        {
                            b1.Property<int>("HotelCode")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<double>("latitude")
                                .HasColumnType("double precision");

                            b1.Property<double>("longtitude")
                                .HasColumnType("double precision");

                            b1.HasKey("HotelCode");

                            b1.ToTable("Hotels");

                            b1.WithOwner()
                                .HasForeignKey("HotelCode");
                        });

                    b.OwnsOne("ShopifyHotelSourcing.DBModels.Types.NameModel", "City", b1 =>
                        {
                            b1.Property<int>("HotelCode")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("content")
                                .HasColumnType("text");

                            b1.HasKey("HotelCode");

                            b1.ToTable("Hotels");

                            b1.WithOwner()
                                .HasForeignKey("HotelCode");
                        });

                    b.OwnsOne("ShopifyHotelSourcing.DBModels.Types.NameModel", "Description", b1 =>
                        {
                            b1.Property<int>("HotelCode")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("content")
                                .HasColumnType("text");

                            b1.HasKey("HotelCode");

                            b1.ToTable("Hotels");

                            b1.WithOwner()
                                .HasForeignKey("HotelCode");
                        });

                    b.OwnsOne("ShopifyHotelSourcing.DBModels.Types.NameModel", "Name", b1 =>
                        {
                            b1.Property<int>("HotelCode")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("content")
                                .HasColumnType("text");

                            b1.HasKey("HotelCode");

                            b1.ToTable("Hotels");

                            b1.WithOwner()
                                .HasForeignKey("HotelCode");
                        });

                    b.OwnsMany("ShopifyHotelSourcing.DBModels.Hotels.Address", "Address", b1 =>
                        {
                            b1.Property<int>("AddressId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("Floor")
                                .HasColumnType("text");

                            b1.Property<int>("Number")
                                .HasColumnType("integer");

                            b1.Property<int>("OwnerId")
                                .HasColumnType("integer");

                            b1.Property<string>("Street")
                                .HasColumnType("text");

                            b1.HasKey("AddressId");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Address");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.OwnsMany("ShopifyHotelSourcing.DBModels.Hotels.DistanceFromTerminal", "Terminals", b1 =>
                        {
                            b1.Property<int>("distanceId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<int>("Distance")
                                .HasColumnType("integer");

                            b1.Property<int>("HotelCode")
                                .HasColumnType("integer");

                            b1.Property<int>("OwnerId")
                                .HasColumnType("integer");

                            b1.Property<string>("TerminalCode")
                                .HasColumnType("text");

                            b1.HasKey("distanceId");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("DistanceFromTerminal");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.OwnsMany("ShopifyHotelSourcing.DBModels.Hotels.Images", "Images", b1 =>
                        {
                            b1.Property<int>("imageId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("CharacteristicCode")
                                .HasColumnType("text");

                            b1.Property<string>("ImageTypeCode")
                                .HasColumnType("text");

                            b1.Property<int>("Order")
                                .HasColumnType("integer");

                            b1.Property<int>("OwnerId")
                                .HasColumnType("integer");

                            b1.Property<string>("Path")
                                .HasColumnType("text");

                            b1.Property<string>("RoomCode")
                                .HasColumnType("text");

                            b1.Property<string>("RoomType")
                                .HasColumnType("text");

                            b1.Property<int>("VisualOrder")
                                .HasColumnType("integer");

                            b1.HasKey("imageId");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Images");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");

                            b1.OwnsOne("ShopifyHotelSourcing.DBModels.Types.NameModel", "Description", b2 =>
                                {
                                    b2.Property<int>("ImagesimageId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                                    b2.Property<string>("content")
                                        .HasColumnType("text");

                                    b2.HasKey("ImagesimageId");

                                    b2.ToTable("Images");

                                    b2.WithOwner()
                                        .HasForeignKey("ImagesimageId");
                                });

                            b1.Navigation("Description");
                        });

                    b.OwnsMany("ShopifyHotelSourcing.DBModels.Hotels.Phone", "Phones", b1 =>
                        {
                            b1.Property<int>("phoneId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<int>("OwnerId")
                                .HasColumnType("integer");

                            b1.Property<string>("PhoneNumber")
                                .HasColumnType("text");

                            b1.Property<string>("PhoneType")
                                .HasColumnType("text");

                            b1.HasKey("phoneId");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Phone");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.OwnsMany("ShopifyHotelSourcing.DBModels.Hotels.Rooms", "Rooms", b1 =>
                        {
                            b1.Property<int>("roomId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("CharateristicCode")
                                .HasColumnType("text");

                            b1.Property<int>("OwnerId")
                                .HasColumnType("integer");

                            b1.Property<string>("PMSRoomCode")
                                .HasColumnType("text");

                            b1.Property<string>("RoomCode")
                                .HasColumnType("text");

                            b1.Property<string>("RoomType")
                                .HasColumnType("text");

                            b1.Property<int>("maxAdult")
                                .HasColumnType("integer");

                            b1.Property<int>("maxChildren")
                                .HasColumnType("integer");

                            b1.Property<int>("maxPax")
                                .HasColumnType("integer");

                            b1.Property<int>("minAdult")
                                .HasColumnType("integer");

                            b1.Property<int>("minPax")
                                .HasColumnType("integer");

                            b1.HasKey("roomId");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Rooms");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");

                            b1.OwnsMany("ShopifyHotelSourcing.DBModels.Types.Facility", "RoomFacilities", b2 =>
                                {
                                    b2.Property<int>("RoomsroomId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                                    b2.Property<int>("FacilityCode")
                                        .HasColumnType("integer");

                                    b2.Property<int>("FacilityGroupCode")
                                        .HasColumnType("integer");

                                    b2.Property<bool>("IndFee")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("IndLogic")
                                        .HasColumnType("boolean");

                                    b2.Property<bool>("IndYesOrNo")
                                        .HasColumnType("boolean");

                                    b2.Property<int>("Number")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Order")
                                        .HasColumnType("integer");

                                    b2.Property<DateTime>("TimeFrom")
                                        .HasColumnType("timestamp without time zone");

                                    b2.Property<DateTime>("TimeTo")
                                        .HasColumnType("timestamp without time zone");

                                    b2.Property<bool>("Voucher")
                                        .HasColumnType("boolean");

                                    b2.HasKey("RoomsroomId", "Id");

                                    b2.ToTable("Rooms_RoomFacilities");

                                    b2.WithOwner()
                                        .HasForeignKey("RoomsroomId");
                                });

                            b1.OwnsMany("ShopifyHotelSourcing.DBModels.Types.RoomStay", "RoomStays", b2 =>
                                {
                                    b2.Property<int>("RoomsroomId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                                    b2.Property<string>("Description")
                                        .HasColumnType("text");

                                    b2.Property<string>("Order")
                                        .HasColumnType("text");

                                    b2.Property<string>("StayType")
                                        .HasColumnType("text");

                                    b2.HasKey("RoomsroomId", "Id");

                                    b2.ToTable("RoomStay");

                                    b2.WithOwner()
                                        .HasForeignKey("RoomsroomId");

                                    b2.OwnsMany("ShopifyHotelSourcing.DBModels.Types.Facility", "RoomStayFacilities", b3 =>
                                        {
                                            b3.Property<int>("RoomStayRoomsroomId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("RoomStayId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("integer")
                                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                                            b3.Property<int>("FacilityCode")
                                                .HasColumnType("integer");

                                            b3.Property<int>("FacilityGroupCode")
                                                .HasColumnType("integer");

                                            b3.Property<bool>("IndFee")
                                                .HasColumnType("boolean");

                                            b3.Property<bool>("IndLogic")
                                                .HasColumnType("boolean");

                                            b3.Property<bool>("IndYesOrNo")
                                                .HasColumnType("boolean");

                                            b3.Property<int>("Number")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Order")
                                                .HasColumnType("integer");

                                            b3.Property<DateTime>("TimeFrom")
                                                .HasColumnType("timestamp without time zone");

                                            b3.Property<DateTime>("TimeTo")
                                                .HasColumnType("timestamp without time zone");

                                            b3.Property<bool>("Voucher")
                                                .HasColumnType("boolean");

                                            b3.HasKey("RoomStayRoomsroomId", "RoomStayId", "Id");

                                            b3.ToTable("RoomStay_RoomStayFacilities");

                                            b3.WithOwner()
                                                .HasForeignKey("RoomStayRoomsroomId", "RoomStayId");
                                        });

                                    b2.Navigation("RoomStayFacilities");
                                });

                            b1.Navigation("RoomFacilities");

                            b1.Navigation("RoomStays");
                        });

                    b.OwnsMany("ShopifyHotelSourcing.DBModels.Hotels.WildCard", "WildCards", b1 =>
                        {
                            b1.Property<int>("wildcardId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("CharacteristicCode")
                                .HasColumnType("text");

                            b1.Property<int>("OwnerId")
                                .HasColumnType("integer");

                            b1.Property<string>("RoomCode")
                                .HasColumnType("text");

                            b1.Property<string>("RoomType")
                                .HasColumnType("text");

                            b1.HasKey("wildcardId");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("WildCard");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");

                            b1.OwnsOne("ShopifyHotelSourcing.DBModels.Types.NameModel", "HotelRoomDescription", b2 =>
                                {
                                    b2.Property<int>("wildcardId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                                    b2.Property<string>("content")
                                        .HasColumnType("text");

                                    b2.HasKey("wildcardId");

                                    b2.ToTable("WildCard");

                                    b2.WithOwner()
                                        .HasForeignKey("wildcardId");
                                });

                            b1.Navigation("HotelRoomDescription");
                        });

                    b.OwnsMany("ShopifyHotelSourcing.DBModels.Types.Facility", "Facilities", b1 =>
                        {
                            b1.Property<int>("facilityId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<int>("FacilityCode")
                                .HasColumnType("integer");

                            b1.Property<int>("FacilityGroupCode")
                                .HasColumnType("integer");

                            b1.Property<bool>("IndFee")
                                .HasColumnType("boolean");

                            b1.Property<bool>("IndLogic")
                                .HasColumnType("boolean");

                            b1.Property<bool>("IndYesOrNo")
                                .HasColumnType("boolean");

                            b1.Property<int>("Number")
                                .HasColumnType("integer");

                            b1.Property<int>("Order")
                                .HasColumnType("integer");

                            b1.Property<int>("OwnerId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("TimeFrom")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<DateTime>("TimeTo")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<bool>("Voucher")
                                .HasColumnType("boolean");

                            b1.HasKey("facilityId");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Hotels_Facilities");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.OwnsMany("ShopifyHotelSourcing.DBModels.Types.Issues", "Issues", b1 =>
                        {
                            b1.Property<int>("issueId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<bool>("Alternative")
                                .HasColumnType("boolean");

                            b1.Property<DateTime>("DateFrom")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<DateTime>("DateTo")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("IssueCode")
                                .HasColumnType("text");

                            b1.Property<string>("IssueType")
                                .HasColumnType("text");

                            b1.Property<int>("Order")
                                .HasColumnType("integer");

                            b1.Property<int>("OwnerId")
                                .HasColumnType("integer");

                            b1.HasKey("issueId");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Issues");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");

                            b1.OwnsOne("ShopifyHotelSourcing.DBModels.Types.NameModel", "Description", b2 =>
                                {
                                    b2.Property<int>("IssuesissueId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                                    b2.Property<string>("content")
                                        .HasColumnType("text");

                                    b2.HasKey("IssuesissueId");

                                    b2.ToTable("Issues");

                                    b2.WithOwner()
                                        .HasForeignKey("IssuesissueId");
                                });

                            b1.OwnsOne("ShopifyHotelSourcing.DBModels.Types.NameModel", "Name", b2 =>
                                {
                                    b2.Property<int>("IssuesissueId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                                    b2.Property<string>("content")
                                        .HasColumnType("text");

                                    b2.HasKey("IssuesissueId");

                                    b2.ToTable("Issues");

                                    b2.WithOwner()
                                        .HasForeignKey("IssuesissueId");
                                });

                            b1.Navigation("Description");

                            b1.Navigation("Name");
                        });

                    b.Navigation("Address");

                    b.Navigation("City");

                    b.Navigation("Coordinates");

                    b.Navigation("Description");

                    b.Navigation("Facilities");

                    b.Navigation("Images");

                    b.Navigation("Issues");

                    b.Navigation("Name");

                    b.Navigation("Phones");

                    b.Navigation("Rooms");

                    b.Navigation("Terminals");

                    b.Navigation("WildCards");
                });

            modelBuilder.Entity("ShopifyHotelSourcing.DBModels.Locations.Country", b =>
                {
                    b.OwnsOne("ShopifyHotelSourcing.DBModels.Types.NameModel", "description", b1 =>
                        {
                            b1.Property<string>("Countrycode")
                                .HasColumnType("text");

                            b1.Property<string>("content")
                                .HasColumnType("text");

                            b1.HasKey("Countrycode");

                            b1.ToTable("Countries");

                            b1.WithOwner()
                                .HasForeignKey("Countrycode");
                        });

                    b.OwnsMany("ShopifyHotelSourcing.DBModels.Locations.State", "states", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("OwnerId")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("code")
                                .HasColumnType("text");

                            b1.Property<string>("name")
                                .HasColumnType("text");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("State");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("description");

                    b.Navigation("states");
                });

            modelBuilder.Entity("ShopifyHotelSourcing.DBModels.Locations.Destination", b =>
                {
                    b.HasOne("ShopifyHotelSourcing.DBModels.Locations.Country", "country")
                        .WithMany("destinations")
                        .HasForeignKey("countryCode");

                    b.OwnsOne("ShopifyHotelSourcing.DBModels.Types.NameModel", "name", b1 =>
                        {
                            b1.Property<string>("Destinationcode")
                                .HasColumnType("text");

                            b1.Property<string>("content")
                                .HasColumnType("text");

                            b1.HasKey("Destinationcode");

                            b1.ToTable("Destinations");

                            b1.WithOwner()
                                .HasForeignKey("Destinationcode");
                        });

                    b.OwnsMany("ShopifyHotelSourcing.DBModels.Locations.GroupZone", "groupZones", b1 =>
                        {
                            b1.Property<int>("GroupZoneId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("OwnerId")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("groupZoneCode")
                                .HasColumnType("text");

                            b1.Property<List<int>>("zones")
                                .HasColumnType("integer[]");

                            b1.HasKey("GroupZoneId");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("GroupZone");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");

                            b1.OwnsOne("ShopifyHotelSourcing.DBModels.Types.NameModel", "name", b2 =>
                                {
                                    b2.Property<int>("GroupZoneId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                                    b2.Property<string>("content")
                                        .HasColumnType("text");

                                    b2.HasKey("GroupZoneId");

                                    b2.ToTable("GroupZone");

                                    b2.WithOwner()
                                        .HasForeignKey("GroupZoneId");
                                });

                            b1.Navigation("name");
                        });

                    b.OwnsMany("ShopifyHotelSourcing.DBModels.Locations.Zone", "zones", b1 =>
                        {
                            b1.Property<int>("ZoneId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("OwnerId")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("name")
                                .HasColumnType("text");

                            b1.Property<int>("zoneCode")
                                .HasColumnType("integer");

                            b1.HasKey("ZoneId");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("Zone");

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");

                            b1.OwnsOne("ShopifyHotelSourcing.DBModels.Types.NameModel", "description", b2 =>
                                {
                                    b2.Property<int>("ZoneId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer")
                                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                                    b2.Property<string>("content")
                                        .HasColumnType("text");

                                    b2.HasKey("ZoneId");

                                    b2.ToTable("Zone");

                                    b2.WithOwner()
                                        .HasForeignKey("ZoneId");
                                });

                            b1.Navigation("description");
                        });

                    b.Navigation("country");

                    b.Navigation("groupZones");

                    b.Navigation("name");

                    b.Navigation("zones");
                });

            modelBuilder.Entity("ShopifyHotelSourcing.DBModels.Locations.Country", b =>
                {
                    b.Navigation("destinations");
                });
#pragma warning restore 612, 618
        }
    }
}
